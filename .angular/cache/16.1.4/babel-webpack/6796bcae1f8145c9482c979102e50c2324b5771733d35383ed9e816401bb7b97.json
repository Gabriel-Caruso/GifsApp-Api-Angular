{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//const GIPHY_API_KEY = 'EE3h2WcPP0wTZWqaevFaeQzJ0BtNCb70';\nexport class GifsService {\n  constructor(http) {\n    this.http = http;\n    this.gifList = [];\n    this._tagsHistory = [];\n    this.serviceUrl = 'https://api.giphy.com/v1/gifs';\n    this.apiKey = 'EE3h2WcPP0wTZWqaevFaeQzJ0BtNCb70';\n    //Aquí llamamos la carga del Local Storage. Se carga al ser inyectado este service.\n    this.loadLocalStorage();\n    this.searchTag(this._tagsHistory[0]);\n  }\n  get tagsHistory() {\n    return [...this._tagsHistory];\n  }\n  searchTag(tag) {\n    if (tag.length === 0) return;\n    this.organizeHistory(tag);\n    const params = new HttpParams().set('api_key', this.apiKey).set('limit', 10).set('q', tag);\n    this.http.get(`${this.serviceUrl}/search`, {\n      params\n    }).subscribe(resp => {\n      this.gifList = resp.data;\n    });\n  }\n  organizeHistory(tag) {\n    tag = tag.toLowerCase();\n    if (this.tagsHistory.includes(tag)) {\n      this._tagsHistory = this._tagsHistory.filter(oldTag => oldTag !== tag);\n    }\n    this._tagsHistory.unshift(tag);\n    this._tagsHistory = this.tagsHistory.splice(0, 10);\n    this.saveLocalStorage();\n  }\n  saveLocalStorage() {\n    localStorage.setItem('history', JSON.stringify(this._tagsHistory));\n  }\n  loadLocalStorage() {\n    if (!localStorage.getItem('history')) {\n      return;\n    }\n    //Le pasamos el operador non null (la exclamación) para que TS no indique que esto puede ser nulo\n    //Ya nos aseguramos en el condicional anterior que NO va a pasar nunca un nulo. Hay que decírselo\n    this._tagsHistory = JSON.parse(localStorage.getItem('history'));\n  }\n}\nGifsService.ɵfac = function GifsService_Factory(t) {\n  return new (t || GifsService)(i0.ɵɵinject(i1.HttpClient));\n};\nGifsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GifsService,\n  factory: GifsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","GifsService","constructor","http","gifList","_tagsHistory","serviceUrl","apiKey","loadLocalStorage","searchTag","tagsHistory","tag","length","organizeHistory","params","set","get","subscribe","resp","data","toLowerCase","includes","filter","oldTag","unshift","splice","saveLocalStorage","localStorage","setItem","JSON","stringify","getItem","parse","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\CURSOANGULAR\\AngularTS\\03-gifs-app\\src\\app\\gifs\\services\\gifs.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient , HttpParams } from '@angular/common/http'\r\nimport { Gif, SearchResponse } from '../interfaces/gifs.interfaces';\r\n//const GIPHY_API_KEY = 'EE3h2WcPP0wTZWqaevFaeQzJ0BtNCb70';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GifsService {\r\n\r\n  public gifList: Gif[] = [];\r\n\r\n  private _tagsHistory: string[] = [];\r\n  private serviceUrl:   string = 'https://api.giphy.com/v1/gifs';\r\n  private apiKey:       string = 'EE3h2WcPP0wTZWqaevFaeQzJ0BtNCb70';\r\n\r\n  constructor( private http: HttpClient ) {\r\n    //Aquí llamamos la carga del Local Storage. Se carga al ser inyectado este service.\r\n    this.loadLocalStorage();\r\n    this.searchTag(this._tagsHistory[0]);\r\n  }\r\n\r\n  get tagsHistory() {\r\n    return [...this._tagsHistory];\r\n  }\r\n\r\n  searchTag( tag: string ):void  {\r\n    if( tag.length === 0 ) return;\r\n    this.organizeHistory(tag);\r\n\r\n    const params = new HttpParams()\r\n      .set('api_key', this.apiKey )\r\n      .set('limit', 10 )\r\n      .set('q', tag )\r\n\r\n    this.http.get<SearchResponse>(`${this.serviceUrl}/search`, { params })\r\n      .subscribe( resp => {\r\n        this.gifList = resp.data;\r\n      } )\r\n\r\n  }\r\n\r\n  private organizeHistory(tag:string){\r\n    tag = tag.toLowerCase();\r\n\r\n    if (this.tagsHistory.includes(tag)) {\r\n      this._tagsHistory = this._tagsHistory.filter( (oldTag) => oldTag !== tag );\r\n    }\r\n\r\n    this._tagsHistory.unshift(tag);\r\n    this._tagsHistory = this.tagsHistory.splice(0,10);\r\n    this.saveLocalStorage();\r\n  }\r\n\r\n\r\n  private saveLocalStorage(): void {\r\n    localStorage.setItem('history', JSON.stringify(this._tagsHistory));\r\n  }\r\n\r\n  private loadLocalStorage(): void {\r\n    if(!localStorage.getItem('history')) { return; }\r\n    //Le pasamos el operador non null (la exclamación) para que TS no indique que esto puede ser nulo\r\n    //Ya nos aseguramos en el condicional anterior que NO va a pasar nunca un nulo. Hay que decírselo\r\n    this._tagsHistory = JSON.parse(localStorage.getItem('history')!);\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AACA,SAAsBA,UAAU,QAAQ,sBAAsB;;;AAE9D;AAGA,OAAM,MAAOC,WAAW;EAQtBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANlB,KAAAC,OAAO,GAAU,EAAE;IAElB,KAAAC,YAAY,GAAa,EAAE;IAC3B,KAAAC,UAAU,GAAa,+BAA+B;IACtD,KAAAC,MAAM,GAAiB,kCAAkC;IAG/D;IACA,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;EACtC;EAEA,IAAIK,WAAWA,CAAA;IACb,OAAO,CAAC,GAAG,IAAI,CAACL,YAAY,CAAC;EAC/B;EAEAI,SAASA,CAAEE,GAAW;IACpB,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAG;IACvB,IAAI,CAACC,eAAe,CAACF,GAAG,CAAC;IAEzB,MAAMG,MAAM,GAAG,IAAId,UAAU,EAAE,CAC5Be,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,CAAE,CAC5BQ,GAAG,CAAC,OAAO,EAAE,EAAE,CAAE,CACjBA,GAAG,CAAC,GAAG,EAAEJ,GAAG,CAAE;IAEjB,IAAI,CAACR,IAAI,CAACa,GAAG,CAAiB,GAAG,IAAI,CAACV,UAAU,SAAS,EAAE;MAAEQ;IAAM,CAAE,CAAC,CACnEG,SAAS,CAAEC,IAAI,IAAG;MACjB,IAAI,CAACd,OAAO,GAAGc,IAAI,CAACC,IAAI;IAC1B,CAAC,CAAE;EAEP;EAEQN,eAAeA,CAACF,GAAU;IAChCA,GAAG,GAAGA,GAAG,CAACS,WAAW,EAAE;IAEvB,IAAI,IAAI,CAACV,WAAW,CAACW,QAAQ,CAACV,GAAG,CAAC,EAAE;MAClC,IAAI,CAACN,YAAY,GAAG,IAAI,CAACA,YAAY,CAACiB,MAAM,CAAGC,MAAM,IAAKA,MAAM,KAAKZ,GAAG,CAAE;;IAG5E,IAAI,CAACN,YAAY,CAACmB,OAAO,CAACb,GAAG,CAAC;IAC9B,IAAI,CAACN,YAAY,GAAG,IAAI,CAACK,WAAW,CAACe,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC;IACjD,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAGQA,gBAAgBA,CAAA;IACtBC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACzB,YAAY,CAAC,CAAC;EACpE;EAEQG,gBAAgBA,CAAA;IACtB,IAAG,CAACmB,YAAY,CAACI,OAAO,CAAC,SAAS,CAAC,EAAE;MAAE;;IACvC;IACA;IACA,IAAI,CAAC1B,YAAY,GAAGwB,IAAI,CAACG,KAAK,CAACL,YAAY,CAACI,OAAO,CAAC,SAAS,CAAE,CAAC;EAElE;;AAzDW9B,WAAW,C;mBAAXA,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXnC,WAAW,C;SAAXA,WAAW;EAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;EAAAC,UAAA,EADC;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}